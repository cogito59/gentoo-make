# Gentoo make.conf - Comprehensive System-Wide Configuration

# Compiler Flags
COMMON_FLAGS="-O2 -pipe -march=native -mtune=native"
CFLAGS="${COMMON_FLAGS}"
CXXFLAGS="${COMMON_FLAGS}"
FCFLAGS="${COMMON_FLAGS}"
FFLAGS="${COMMON_FLAGS}"

# Rust-specific Flags
RUSTFLAGS="-C target-cpu=native -C opt-level=3 -C codegen-units=1 -C lto=thin"
CARGO_BUILD_JOBS="$(nproc)"

# Portage Settings
MAKEOPTS="-j$(nproc)"  # Automatically use all CPU cores for compilation
EMERGE_DEFAULT_OPTS="--ask --verbose --quiet-build=y --complete-graph --load-average"

# Build and Package Management
FEATURES="parallel-install splitdebug"
PORTAGE_NICENESS=1
PORTDIR="/usr/portage"
DISTDIR="/usr/portage/distfiles"
PKGDIR="/usr/portage/packages"

# CPU Architecture and Optimization
CPU_FLAGS_X86="mmx sse sse2 sse3 ssse3 sse4_1 sse4_2 aes avx avx2 fma3 popcnt rdrand"

# Global USE Flags
USE="
    X wayland pipewire pulseaudio alsa
    gtk gtk3 qt5 qt6
    opengl vulkan
    cups printer
    networkmanager bluetooth
    ssl tls
    pdf jpeg png svg
    python perl ruby rust
    dbus
    introspection
    zeroconf
    -qt4 -gnome -kde
"

# Language Settings
LINGUAS="en_US ru"
L10N="en-US ru"

# Rust Targets and Configuration
RUST_TARGETS="x86_64-unknown-linux-gnu"
RUSTUP_HOME="/opt/rust"
CARGO_HOME="/opt/cargo"

# Rust USE Flags
USE_RUST="
    rust-src 
    rust-analyzer 
    rustfmt 
    clippy
"

# Video Drivers (adjust as needed)
VIDEO_CARDS="intel i965 iris"

# OpenGL and Vulkan
OPENGL_PROFILE="default"

# Input Methods
INPUT_DEVICES="libinput"

# License Policy
ACCEPT_LICENSE="*"  # Caution: Be aware of licensing implications

# Portage Mirrors
GENTOO_MIRRORS="
    https://mirrors.kernel.org/gentoo/
    https://mirror.yandex.ru/gentoo-distfiles/
    https://gentoo.c3sl.ufpr.br/
"

# Python Targets
PYTHON_TARGETS="python3_10 python3_11"
PYTHON_SINGLE_TARGET="python3_11"

# Ruby Targets
RUBY_TARGETS="ruby31"

# Rust Targets
RUST_TARGETS="stable-x86_64-unknown-linux-gnu"

# System-specific optimizations (uncomment and adjust as needed)
# QEMU_SOFTMMU_TARGETS="x86_64"
# QEMU_USER_TARGETS="x86_64"

# Additional Security Flags (optional)
# CFLAGS="${CFLAGS} -fstack-protector-strong -D_FORTIFY_SOURCE=2"
# LDFLAGS="${LDFLAGS} -Wl,-z,defs -Wl,-z,now -Wl,-z,relro"